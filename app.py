import streamlit as st
import joblib
import numpy as np
import pandas as pd
import os
import matplotlib.pyplot as plt

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å (–∑–¥–µ—Å—å –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ "career_model.pkl" —É–∂–µ –æ–±—É—á–µ–Ω –∏ –ª–µ–∂–∏—Ç —Ä—è–¥–æ–º)
model = joblib.load("career_model.pkl")

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞/—Ñ–∏–ª—å—Ç—Ä–∞
PROFESSIONS = [
    "–ò–Ω–∂–µ–Ω–µ—Ä-–º–µ—Ö–∞–Ω–∏–∫", "–ò–Ω–∂–µ–Ω–µ—Ä-—ç–ª–µ–∫—Ç—Ä–∏–∫", "–ò–Ω–∂–µ–Ω–µ—Ä-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å", "–ò–Ω–∂–µ–Ω–µ—Ä-—Ö–∏–º–∏–∫", 
    "–ò–Ω–∂–µ–Ω–µ—Ä-—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫", "–ê–≤–∏–∞–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∏–Ω–∂–µ–Ω–µ—Ä", "–ò–Ω–∂–µ–Ω–µ—Ä-—ç–∫–æ–ª–æ–≥", "–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä",
    "–°–≤–∞—Ä—â–∏–∫", "–≠–ª–µ–∫—Ç—Ä–∏–∫", "–ê–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫", "–ü–∏–ª–æ—Ç (–ª—ë—Ç—á–∏–∫)", "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ 3D-–ø–µ—á–∞—Ç–∏", 
    "–ù–∞–Ω–æ–∏–Ω–∂–µ–Ω–µ—Ä", "–ò–Ω–∂–µ–Ω–µ—Ä-–Ω–µ—Ñ—Ç—è–Ω–∏–∫", "–ì–µ–æ–ª–æ–≥", "–ò–Ω–∂–µ–Ω–µ—Ä-–º–µ—Ö–∞—Ç—Ä–æ–Ω–∏–∫", "–ò–Ω–∂–µ–Ω–µ—Ä-—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫", 
    "–ö–æ—Å–º–æ–Ω–∞–≤—Ç", "–§–∏–ª–æ–ª–æ–≥", "–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", "–ò—Å—Ç–æ—Ä–∏–∫", "–Æ—Ä–∏—Å—Ç", "–ü–æ–ª–∏—Ç–æ–ª–æ–≥", "–°–æ—Ü–∏–æ–ª–æ–≥", 
    "–§–∏–ª–æ—Å–æ—Ñ", "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å", "–†–µ–¥–∞–∫—Ç–æ—Ä", "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç", "–ê—Ä—Ö–µ–æ–ª–æ–≥", "–í—Ä–∞—á", "–•–∏—Ä—É—Ä–≥", 
    "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥", "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä", "–§–∞—Ä–º–∞—Ü–µ–≤—Ç", "–ú–µ–¥—Å–µ—Å—Ç—Ä–∞ (–ú–µ–¥–±—Ä–∞—Ç)", "–§–µ–ª—å–¥—à–µ—Ä", "–ü—Å–∏—Ö–∏–∞—Ç—Ä",
    "–§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç", "–î–∏–µ—Ç–æ–ª–æ–≥", "–ú–∞—Å—Å–∞–∂–∏—Å—Ç", "–•—É–¥–æ–∂–Ω–∏–∫", "–ú—É–∑—ã–∫–∞–Ω—Ç", "–ê–∫—Ç—ë—Ä", "–†–µ–∂–∏—Å—Å—ë—Ä",
    "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä", "–ú–æ–¥–µ–ª—å–µ—Ä (–¥–∏–∑–∞–π–Ω–µ—Ä –æ–¥–µ–∂–¥—ã)", "–î–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞", "–§–æ—Ç–æ–≥—Ä–∞—Ñ",
    "–í–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂—ë—Ä", "–ê–Ω–∏–º–∞—Ç–æ—Ä (–º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä)", "–°–∫—É–ª—å–ø—Ç–æ—Ä", "–ü–∏—Å–∞—Ç–µ–ª—å", "–ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä",
    "–¢–∞–Ω—Ü–æ—Ä", "–Æ–≤–µ–ª–∏—Ä", "–ü–æ–≤–∞—Ä (—à–µ—Ñ-–ø–æ–≤–∞—Ä)", "–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä", "–£—á–∏—Ç–µ–ª—å", 
    "–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å –¥–µ—Ç—Å–∫–æ–≥–æ —Å–∞–¥–∞", "–°–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫", "–ü—Å–∏—Ö–æ–ª–æ–≥ (–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç)",
    "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä", "–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π", "–í–æ–µ–Ω–Ω—ã–π –æ—Ñ–∏—Ü–µ—Ä", "–ü–æ–∂–∞—Ä–Ω—ã–π", 
    "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—É (HR)", "Event-–º–µ–Ω–µ–¥–∂–µ—Ä", "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ç—É—Ä–∏–∑–º—É", 
    "–≠–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥ (–≥–∏–¥)", "–õ–æ–≥–æ–ø–µ–¥ (–¥–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥)", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", 
    "–ú–æ–±–∏–ª—å–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö (Data Analyst)", "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", 
    "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö",
    "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É (AI)", "–°–µ—Ç–µ–≤–æ–π –∏–Ω–∂–µ–Ω–µ—Ä",
    "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ (IT)", "–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫ –ü–û (QA-–∏–Ω–∂–µ–Ω–µ—Ä)", "UX/UI –¥–∏–∑–∞–π–Ω–µ—Ä",
    "–ì–µ–π–º-–¥–∏–∑–∞–π–Ω–µ—Ä", "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä", "–ö–æ–Ω—Ç–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä", "SEO-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç",
    "SMM-–º–µ–Ω–µ–¥–∂–µ—Ä (—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–æ—Ü. –º–µ–¥–∏–∞)", "3D-–¥–∏–∑–∞–π–Ω–µ—Ä (3D-–º–æ–¥–µ–ª–ª–µ—Ä)", 
    "–ë–ª–æ–≥–µ—Ä (–∫–æ–Ω—Ç–µ–Ω—Ç-–∫—Ä–µ–∞—Ç–æ—Ä)", "–≠–∫–æ–Ω–æ–º–∏—Å—Ç", "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä", "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫", 
    "–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥", "–ü—Ä–æ–¥—É–∫—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä", "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º", "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤", 
    "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫", "–õ–æ–≥–∏—Å—Ç", "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å"
]

st.set_page_config(page_title="–ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è", layout="centered")
st.title("üéì –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏")

st.markdown("""
–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ, –∏ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏.

**–ë–ª–æ–∫ 1. –û—Ü–µ–Ω–∫–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º**  
–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é –æ—Ü–µ–Ω–∫—É –∑–∞ —Ç–µ–∫—É—â—É—é —á–µ—Ç–≤–µ—Ä—Ç—å/—Å–µ–º–µ—Å—Ç—Ä *–ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ* (–º–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä 4.50).  
–°–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –µ—ë –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏ –≤—ã—Å—Ç–∞–≤–∏—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–ª–∞–π–¥–µ—Ä.  
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ —Å–ª–∞–π–¥–µ—Ä–µ, –µ—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π –ª—É—á—à–µ/—Ö—É–∂–µ, —á–µ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É–ª–∞.
""")

def input_grade_and_slider(subject_name, default_grade=4.0):
    # –ß–∏—Å–ª–æ–≤–æ–π –≤–≤–æ–¥ –æ—Ü–µ–Ω–∫–∏ –ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ (–º–æ–∂–Ω–æ —Å –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —á–∞—Å—Ç—å—é)
    grade = st.number_input(f"–û—Ü–µ–Ω–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é —á–µ—Ç–≤–µ—Ä—Ç—å/—Å–µ–º–µ—Å—Ç—Ä –ø–æ {subject_name} (1.0 - 5.0)",
                            min_value=1.0, max_value=5.0, value=default_grade, step=0.01)
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –æ—Ü–µ–Ω–∫—É –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã
    grade_percentage = int(round((grade / 5.0) * 100))
    # –í—ã–≤–æ–¥–∏–º —Å–ª–∞–π–¥–µ—Ä, –≥–¥–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    percentage = st.slider(f"–ü—Ä–æ—Ü–µ–Ω—Ç –≤–ª–∞–¥–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–º {subject_name}", 0, 100, grade_percentage)
    return percentage

# –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
math = input_grade_and_slider("–º–∞—Ç–µ–º–∞—Ç–∏–∫–µ")
bio = input_grade_and_slider("–±–∏–æ–ª–æ–≥–∏–∏")
inf = input_grade_and_slider("–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ")
lit = input_grade_and_slider("–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ")
eng = input_grade_and_slider("–∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É")

st.markdown("""
**–ë–ª–æ–∫ 2. –ò–Ω—Ç–µ—Ä–µ—Å—ã**  
–û—Ü–µ–Ω–∏—Ç–µ –ø–æ 10-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ —Å–≤–æ—é –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ —É–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä 
[–∑–¥–µ—Å—å](https://bvbinfo.ru/lk-student/realizing), —á—Ç–æ–±—ã —Ç–æ—á–Ω–µ–µ –æ—Ü–µ–Ω–∏—Ç—å —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã.
""")

tech = st.slider("–ò–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –Ω–∞—É–∫–∞–º (0-10)", 0, 10, 5)
art = st.slider("–ò–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤—É (0-10)", 0, 10, 5)
social = st.slider("–ò–Ω—Ç–µ—Ä–µ—Å –∫ –ª—é–¥—è–º –∏ –ø–æ–º–æ—â–∏ (0-10)", 0, 10, 5)

st.markdown("""
**–ë–ª–æ–∫ 3. –¢–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏**  
–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ [my-type.ru](https://my-type.ru/) –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–π MBTI.  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –±—É–∫–≤—ã –≤ –ø–æ–ª—è—Ö –Ω–∏–∂–µ.
""")

ei = st.selectbox("–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç (E) –∏–ª–∏ –ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç (I)", ["E", "I"])
sn = st.selectbox("–û—â—É—â–µ–Ω–∏–µ (S) –∏–ª–∏ –ò–Ω—Ç—É–∏—Ü–∏—è (N)", ["S", "N"])
tf = st.selectbox("–ú—ã—à–ª–µ–Ω–∏–µ (T) –∏–ª–∏ –ß—É–≤—Å—Ç–≤–∞ (F)", ["T", "F"])
jp = st.selectbox("–°—É–∂–¥–µ–Ω–∏–µ (J) –∏–ª–∏ –í–æ—Å–ø—Ä–∏—è—Ç–∏–µ (P)", ["J", "P"])

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º MBTI –≤ –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–ª–∞–≥–∏ (–ø—Ä–∏–º–µ—Ä)
ei_bin = 1 if ei == "E" else 0
sn_bin = 1 if sn == "S" else 0
tf_bin = 1 if tf == "T" else 0
jp_bin = 1 if jp == "J" else 0

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
if st.button("üîç –ü–æ–¥–æ–±—Ä–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é"):
    features = np.array([[math, bio, inf, lit, eng, tech, art, social, 
                          ei_bin, sn_bin, tf_bin, jp_bin]])
    proba = model.predict_proba(features)[0]
    classes = model.classes_

    # –ò–Ω–¥–µ–∫—Å—ã —Ç–æ–ø-5 –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
    top_indices = proba.argsort()[-5:][::-1]
    top_scores = proba[top_indices]

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º, —á—Ç–æ–±—ã —Å—É–º–º–∞ —Ç–æ–ø-5 –±—ã–ª–∞ 1 (–¥–∞–ª–µ–µ —É–º–Ω–æ–∂–∞–µ–º –Ω–∞ 100)
    norm_top_scores = top_scores / top_scores.sum()

    results = []
    labels = []
    scores = []

    for j, i in enumerate(top_indices):
        profession = classes[i]
        probability = round(norm_top_scores[j] * 100, 2)

        # –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Ä–∏–º–µ—Ä "–ø—Ä–∏—á–∏–Ω"
        reasons = []
        if tech > 7:
            reasons.append("–∏–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –Ω–∞—É–∫–∞–º")
        if art > 7:
            reasons.append("—Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏")
        if social > 7:
            reasons.append("–∏–Ω—Ç–µ—Ä–µ—Å –∫ –ª—é–¥—è–º")
        if bio > 85:
            reasons.append("—Å–∏–ª—å–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è")
        if inf > 85:
            reasons.append("—Å–∏–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")

        reason_text = ", ".join(reasons) if reasons else "–ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ –æ–±—â–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é"

        results.append({
            "–ü—Ä–æ—Ñ–µ—Å—Å–∏—è": profession,
            "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å": f"{probability}%",
            "–ü—Ä–∏—á–∏–Ω—ã": reason_text
        })

        labels.append(profession)
        scores.append(probability)

    st.success("üéØ –í–∞—à–∏ —Ç–æ–ø-5 –ø—Ä–æ—Ñ–µ—Å—Å–∏–π:")
    df_result = pd.DataFrame(results)
    df_result.index = [f"#{i+1}" for i in range(len(df_result))]
    st.dataframe(df_result)

    # –ü–æ—Å—Ç—Ä–æ–∏–º –ø—Ä–æ—Å—Ç–æ–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –±–∞—Ä—á–∞—Ä—Ç
    fig, ax = plt.subplots()
    ax.barh(labels[::-1], scores[::-1])
    ax.set_xlabel("–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å (%)")
    ax.set_title("–ù–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏")
    st.pyplot(fig)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ CSV
    csv = df_result.to_csv(index=False).encode('utf-8')
    st.download_button(
        label="üíæ –°–∫–∞—á–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (CSV)",
        data=csv,
        file_name='career_recommendations.csv',
        mime='text/csv'
    )

st.markdown("---")

# –ë–ª–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
st.header("–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

st.write("–û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ –æ—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –∑–≤—ë–∑–¥–æ—á–∫–∞–º–∏.")

REVIEWS_FILE = "reviews.xlsx"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º —Ñ–∞–π–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏
if os.path.exists(REVIEWS_FILE):
    reviews_df = pd.read_excel(REVIEWS_FILE)
else:
    reviews_df = pd.DataFrame(columns=["–ü—Ä–æ—Ñ–µ—Å—Å–∏—è", "–ò–º—è", "–û—Ç–∑—ã–≤", "–û—Ü–µ–Ω–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"])

with st.form("review_form", clear_on_submit=True):
    st.subheader("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
    selected_profession = st.selectbox("–ü—Ä–æ—Ñ–µ—Å—Å–∏—è", PROFESSIONS)
    user_name = st.text_input("–í–∞—à–µ –∏–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
    user_feedback = st.text_area("–í–∞—à –æ—Ç–∑—ã–≤")

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ –∑–≤—ë–∑–¥–æ—á–∫–∞–º–∏
    star_options = {
        5: "‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ",
        4: "‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ",
        3: "‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ",
        2: "‚òÖ‚òÖ‚òÜ‚òÜ‚òÜ",
        1: "‚òÖ‚òÜ‚òÜ‚òÜ‚òÜ"
    }

    # –†–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏ —Å–æ –∑–≤—ë–∑–¥–æ—á–∫–∞–º–∏
    # –ü–æ—Ä—è–¥–æ–∫ - –æ—Ç 5 –¥–æ 1, —á—Ç–æ–±—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–µ–ª "5" (—Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥) –ø–µ—Ä–≤—ã–º
    rating = st.radio(
        "–û—Ü–µ–Ω–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",
        [5, 4, 3, 2, 1],
        index=0,  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω–∞ —Å–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –æ—Ü–µ–Ω–∫–∞
        format_func=lambda x: star_options[x]
    )

    submit_review = st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤")

    if submit_review:
        if user_feedback.strip():
            new_row = {
                "–ü—Ä–æ—Ñ–µ—Å—Å–∏—è": selected_profession,
                "–ò–º—è": user_name if user_name.strip() else "–ê–Ω–æ–Ω–∏–º",
                "–û—Ç–∑—ã–≤": user_feedback.strip(),
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º–µ–Ω–Ω–æ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞, 
                # –Ω–æ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–ª–∏ –∞–Ω–∞–ª–∏–∑–µ –º–æ–∂–µ–º —Å–Ω–æ–≤–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∑–≤—ë–∑–¥–æ—á–∫–∏
                "–û—Ü–µ–Ω–∫–∞ —Å–µ—Ä–≤–∏—Å–∞": rating  
            }
            new_row_df = pd.DataFrame([new_row])
            reviews_df = pd.concat([reviews_df, new_row_df], ignore_index=True)
            reviews_df.to_excel(REVIEWS_FILE, index=False, engine="openpyxl")
            st.success("–û—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
        else:
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞.")

# –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤
st.markdown("### –í—Å–µ –æ—Ç–∑—ã–≤—ã")

filter_profession = st.selectbox("–§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ (–∏–ª–∏ '–í—Å–µ')", ["–í—Å–µ"] + PROFESSIONS)
if filter_profession == "–í—Å–µ":
    filtered_reviews = reviews_df
else:
    filtered_reviews = reviews_df[reviews_df["–ü—Ä–æ—Ñ–µ—Å—Å–∏—è"] == filter_profession]

# –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –≤ —Ç–∞–±–ª–∏—Ü–µ —Ä–µ–π—Ç–∏–Ω–≥–∏ —Ç–æ–∂–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å ¬´–∑–≤—ë–∑–¥–æ—á–∫–∞–º–∏¬ª:
# –ú–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º
def convert_rating_to_stars(r):
    return star_options.get(r, "‚Äî")

star_options = {
    5: "‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ",
    4: "‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ",
    3: "‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ",
    2: "‚òÖ‚òÖ‚òÜ‚òÜ‚òÜ",
    1: "‚òÖ‚òÜ‚òÜ‚òÜ‚òÜ"
}

# –ö–æ–ø–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –Ω–µ –º–µ–Ω—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º
display_df = filtered_reviews.copy()

if not display_df.empty:
    display_df["–û—Ü–µ–Ω–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"] = display_df["–û—Ü–µ–Ω–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"].apply(convert_rating_to_stars)

st.dataframe(display_df)